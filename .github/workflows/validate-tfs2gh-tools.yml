name: Validate TFS to GitHub Migration Tools

on:
  push:
    branches: [ main, develop ]
    paths:
      - '.github/prompts/tfs2gh.prompt.md'
      - '.github/workflows/validate-tfs2gh-tools.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/prompts/tfs2gh.prompt.md'
      - '.github/workflows/validate-tfs2gh-tools.yml'
  workflow_dispatch:

jobs:
  validate-tools:
    runs-on: windows-latest
    name: Validate TFS to GitHub Migration Tools Installation
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Chocolatey (required for git-tfs)
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
      shell: powershell

    - name: Install Git-TFS (ESSENTIAL for TFVC to Git conversion)
      run: |
        choco install gittfs -y
      shell: powershell

    - name: Install GitHub CLI
      run: |
        # GitHub CLI is pre-installed on GitHub-hosted runners
        gh --version
      shell: powershell

    - name: Install GitHub Enterprise Importer ADO2GH extension (for TFS)
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh extension install github/gh-ado2gh
      shell: powershell

    - name: Install Git CLI
      run: |
        # Git is pre-installed on GitHub-hosted runners
        git --version
      shell: powershell

    - name: Refresh PATH environment
      run: |
        $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH","User")
      shell: powershell

    - name: Verify Git-TFS installation (CRITICAL)
      run: |
        # Wait a moment for installation to complete
        Start-Sleep -Seconds 10
        
        # Refresh PATH
        $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH","User")
        
        # Try multiple ways to find git-tfs
        try {
          git tfs --version
        } catch {
          try {
            git tfs help
          } catch {
            $gitTfsPath = Get-Command "git-tfs" -ErrorAction SilentlyContinue
            if ($gitTfsPath) {
            } else {
              choco list --local-only | Select-String "gittfs"
            }
          }
        }
      shell: powershell

    - name: Verify GitHub CLI installation
      run: |
        gh --version
      shell: powershell

    - name: Verify GitHub Enterprise Importer ADO2GH extension (for TFS)
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        $extensions = gh extension list
        if ($extensions -match "ado2gh") {
        } else {
          throw "❌ GitHub Enterprise Importer ADO2GH extension not found"
        }
      shell: powershell

    - name: Verify Git CLI installation
      run: |
        git --version
      shell: powershell

    - name: Test Git-TFS functionality
      run: |
        # Refresh PATH again
        $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH","User")
        
        try {
          git tfs help 2>&1 | Out-Null
        } catch {
        }
      shell: powershell

    - name: Verify Windows environment (highly recommended for TFS)
      run: |
        $PSVersionTable.PSVersion
      shell: powershell

    - name: Tool Verification Summary
      run: |
      shell: powershell
