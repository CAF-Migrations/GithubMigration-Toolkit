name: Validate Azure DevOps to GitHub Migration Tools

on:
  push:
    branches: [ main, develop ]
    paths:
      - '.github/prompts/ado2gh.prompt.md'
      - '.github/workflows/validate-ado2gh-tools.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/prompts/ado2gh.prompt.md'
      - '.github/workflows/validate-ado2gh-tools.yml'
  workflow_dispatch:

jobs:
  validate-tools:
    runs-on: windows-latest
    name: Validate ADO to GitHub Migration Tools Installation
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install GitHub CLI
      run: |
        # GitHub CLI is pre-installed on GitHub-hosted runners
        gh --version
      shell: powershell

    - name: Install GitHub Enterprise Importer ADO2GH extension
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh extension install github/gh-ado2gh
      shell: powershell

    - name: Install Azure CLI
      run: |
        Invoke-WebRequest -Uri https://aka.ms/installazurecliwindows -OutFile .\AzureCLI.msi
        Start-Process msiexec.exe -Wait -ArgumentList '/I AzureCLI.msi /quiet'
      shell: powershell

    - name: Install Azure DevOps extension
      run: |
        az extension add --name azure-devops
      shell: powershell

    - name: Install Git CLI
      run: |
        # Git is pre-installed on GitHub-hosted runners
        git --version
      shell: powershell

    - name: Verify GitHub CLI installation
      run: |
        gh --version
      shell: powershell

    - name: Verify GitHub Enterprise Importer ADO2GH extension
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        $extensions = gh extension list
        if ($extensions -match "ado2gh") {
        } else {
          throw "❌ GitHub Enterprise Importer ADO2GH extension not found"
        }
      shell: powershell

    - name: Verify Azure CLI installation
      run: |
        az --version
      shell: powershell

    - name: Verify Azure DevOps extension
      run: |
        $extensions = az extension list --output json | ConvertFrom-Json
        $devopsExt = $extensions | Where-Object { $_.name -eq "azure-devops" }
        if ($devopsExt) {
        } else {
          throw "❌ Azure DevOps extension not found"
        }
      shell: powershell

    - name: Verify Git CLI installation
      run: |
        git --version
      shell: powershell

    - name: Verify PowerShell availability
      run: |
        $PSVersionTable.PSVersion
      shell: powershell

    - name: Tool Verification Summary
      run: |
      shell: powershell

