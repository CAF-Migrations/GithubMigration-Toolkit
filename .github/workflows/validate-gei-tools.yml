name: Validate GitHub to GitHub Migration Tools

on:
  push:
    branches: [ main, develop ]
    paths:
      - '.github/prompts/gei.prompt.md'
      - '.github/workflows/validate-gei-tools.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/prompts/gei.prompt.md'
      - '.github/workflows/validate-gei-tools.yml'
  workflow_dispatch:

jobs:
  validate-tools:
    runs-on: windows-latest
    name: Validate GitHub to GitHub Migration Tools Installation
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install GitHub CLI
      run: |
        # GitHub CLI is pre-installed on GitHub-hosted runners
        gh --version
        Write-Host "GitHub CLI is available"
      shell: powershell

    - name: Install GitHub Enterprise Importer GEI extension
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh extension install github/gh-gei
        Write-Host "GitHub Enterprise Importer GEI extension installed"
      shell: powershell

    - name: Install Git CLI
      run: |
        # Git is pre-installed on GitHub-hosted runners
        git --version
        Write-Host "Git CLI is available"
      shell: powershell

    - name: Verify GitHub CLI installation
      run: |
        gh --version
        Write-Host "ÔøΩ GitHub CLI version verified"
      shell: powershell

    - name: Verify GitHub Enterprise Importer GEI extension
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        $extensions = gh extension list
        if ($extensions -match "gei") {
          Write-Host "ÔøΩ GitHub Enterprise Importer GEI extension verified"
        } else {
          throw "‚ùå GitHub Enterprise Importer GEI extension not found"
        }
      shell: powershell

    - name: Verify Git CLI installation
      run: |
        git --version
        Write-Host "ÔøΩ Git CLI version verified"
      shell: powershell

    - name: Test GEI Extension Help
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        try {
          gh gei --help | Out-Null
          Write-Host "ÔøΩ GEI extension help command works"
        } catch {
          Write-Host "‚ö†Ô∏è GEI extension installed but help may need authentication context"
        }
      shell: powershell

    - name: Validation Summary
      run: |
        Write-Host "======================================================="
        Write-Host "üéâ GITHUB TO GITHUB MIGRATION TOOLS VALIDATED"
        Write-Host "======================================================="
        Write-Host "ÔøΩ GitHub CLI installed and accessible"
        Write-Host "ÔøΩ GitHub Enterprise Importer GEI extension ready"
        Write-Host "ÔøΩ Git CLI installed and accessible"
        Write-Host ""
        Write-Host "üìã Migration Capabilities:"
        Write-Host "ÔøΩ GitHub.com to GitHub Enterprise Cloud"
        Write-Host "ÔøΩ GitHub Enterprise Server to GitHub Enterprise Cloud"
        Write-Host "ÔøΩ GitHub.com to GitHub.com (organization transfers)"
        Write-Host ""
        Write-Host "üîß Required Environment Variables for Migration:"
        Write-Host "   - GH_SOURCE_PAT: Source GitHub organization access token"
        Write-Host "   - GH_PAT: Target GitHub organization access token"
        Write-Host "======================================================="
      shell: powershell

